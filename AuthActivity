package com.example.helper;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;
import androidx.core.content.ContextCompat;

import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class AuthActivity extends AppCompatActivity {

    private LinearLayout layoutLogin, layoutRegister;
    private Button btnToggleLogin, btnToggleRegister, btnLogin, btnRegister, btnResetPassword;
    private EditText edtLoginEmail, edtLoginPassword, edtRegisterName, edtRegisterEmail, edtRegisterPassword;
    private ProgressBar progressBar;

    private FirebaseAuth auth;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_auth);

        // Initialize Firebase Auth
        auth = FirebaseAuth.getInstance();

        // Initialize Views
        layoutLogin = findViewById(R.id.layoutLogin);
        layoutRegister = findViewById(R.id.layoutRegister);
        btnToggleLogin = findViewById(R.id.btnToggleLogin);
        btnToggleRegister = findViewById(R.id.btnToggleRegister);
        btnLogin = findViewById(R.id.btnLogin);
        btnRegister = findViewById(R.id.btnRegister);
        btnResetPassword = findViewById(R.id.btnResetPassword);  // Button for resetting password
        edtLoginEmail = findViewById(R.id.edtLoginEmail);
        edtLoginPassword = findViewById(R.id.edtLoginPassword);
        edtRegisterName = findViewById(R.id.edtRegisterName);
        edtRegisterEmail = findViewById(R.id.edtRegisterEmail);
        edtRegisterPassword = findViewById(R.id.edtRegisterPassword);
        progressBar = findViewById(R.id.progressBar);  // Loading indicator

        // Toggle Between Login and Register
        btnToggleLogin.setOnClickListener(v -> {
            layoutLogin.setVisibility(View.VISIBLE);
            layoutRegister.setVisibility(View.GONE);
            btnToggleLogin.setBackgroundTintList(ContextCompat.getColorStateList(AuthActivity.this, R.color.orange));
            btnToggleLogin.setTextColor(ContextCompat.getColor(AuthActivity.this, R.color.white));
            btnToggleRegister.setBackgroundTintList(ContextCompat.getColorStateList(AuthActivity.this, R.color.light_gray));
            btnToggleRegister.setTextColor(ContextCompat.getColor(AuthActivity.this, R.color.black));
        });

        btnToggleRegister.setOnClickListener(v -> {
            layoutLogin.setVisibility(View.GONE);
            layoutRegister.setVisibility(View.VISIBLE);
            btnToggleRegister.setBackgroundTintList(ContextCompat.getColorStateList(AuthActivity.this, R.color.orange));
            btnToggleRegister.setTextColor(ContextCompat.getColor(AuthActivity.this, R.color.white));
            btnToggleLogin.setBackgroundTintList(ContextCompat.getColorStateList(AuthActivity.this, R.color.light_gray));
            btnToggleLogin.setTextColor(ContextCompat.getColor(AuthActivity.this, R.color.black));
        });

        // Login Button Action
        btnLogin.setOnClickListener(v -> {
            String email = edtLoginEmail.getText().toString();
            String password = edtLoginPassword.getText().toString();

            if (email.isEmpty() || !isValidEmail(email)) {
                edtLoginEmail.setError("Invalid email");
                return;
            }
            if (password.isEmpty() || password.length() < 6) {
                edtLoginPassword.setError("Password must be at least 6 characters");
                return;
            }

            progressBar.setVisibility(View.VISIBLE); // Show loading indicator
            auth.signInWithEmailAndPassword(email, password)
                    .addOnCompleteListener(task -> {
                        progressBar.setVisibility(View.GONE); // Hide loading indicator
                        if (task.isSuccessful()) {
                            // Get Firebase user and UID
                            FirebaseUser user = auth.getCurrentUser();
                            if (user != null) {
                                String userId = user.getUid(); // Get UID from Firebase user

                                // Pass UID to DashboardActivity
                                Intent intent = new Intent(AuthActivity.this, DashboardActivity.class);
                                intent.putExtra("userId", userId); // Pass the UID to DashboardActivity
                                startActivity(intent);
                                finish();
                            }
                        } else {
                            Toast.makeText(this, "Login Failed! " + task.getException().getMessage(), Toast.LENGTH_SHORT).show();
                        }
                    });
        });

        // Register Button Action
        btnRegister.setOnClickListener(v -> {
            String name = edtRegisterName.getText().toString();
            String email = edtRegisterEmail.getText().toString();
            String password = edtRegisterPassword.getText().toString();

            if (name.isEmpty()) {
                edtRegisterName.setError("Name is required");
                return;
            }
            if (email.isEmpty() || !isValidEmail(email)) {
                edtRegisterEmail.setError("Invalid email");
                return;
            }
            if (password.isEmpty() || password.length() < 6) {
                edtRegisterPassword.setError("Password must be at least 6 characters");
                return;
            }

            progressBar.setVisibility(View.VISIBLE); // Show loading indicator
            auth.createUserWithEmailAndPassword(email, password)
                    .addOnCompleteListener(task -> {
                        progressBar.setVisibility(View.GONE); // Hide loading indicator
                        if (task.isSuccessful()) {
                            // Get Firebase user and UID
                            FirebaseUser user = auth.getCurrentUser();
                            if (user != null) {
                                String userId = user.getUid(); // Get UID from Firebase user

                                // Pass UID to DashboardActivity
                                Intent intent = new Intent(AuthActivity.this, DashboardActivity.class);
                                intent.putExtra("userId", userId); // Pass the UID to DashboardActivity
                                startActivity(intent);
                                finish();
                            }
                        } else {
                            Toast.makeText(this, "Registration Failed! " + task.getException().getMessage(), Toast.LENGTH_SHORT).show();
                        }
                    });
        });

        // Reset Password Button Action
        btnResetPassword.setOnClickListener(v -> {
            String email = edtLoginEmail.getText().toString();
            if (email.isEmpty() || !isValidEmail(email)) {
                edtLoginEmail.setError("Invalid email");
                return;
            }

            progressBar.setVisibility(View.VISIBLE); // Show loading indicator
            auth.sendPasswordResetEmail(email)
                    .addOnCompleteListener(task -> {
                        progressBar.setVisibility(View.GONE); // Hide loading indicator
                        if (task.isSuccessful()) {
                            Toast.makeText(this, "Password reset email sent!", Toast.LENGTH_SHORT).show();
                        } else {
                            Toast.makeText(this, "Failed to send reset email! " + task.getException().getMessage(), Toast.LENGTH_SHORT).show();
                        }
                    });
        });
    }

    // Helper method to validate email format using regex
    private boolean isValidEmail(String email) {
        String emailPattern = "[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}";
        Pattern pattern = Pattern.compile(emailPattern);
        Matcher matcher = pattern.matcher(email);
        return matcher.matches();
    }
}
